package com.joelbyler.pomodorotimer;

import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;

import android.app.Activity;
import android.media.Ringtone;
import android.media.RingtoneManager;
import android.net.Uri;
import android.os.Bundle;
import android.os.Handler;
import android.os.Message;
import android.view.Menu;
import android.view.View;
import android.widget.TextView;

public class MainActivity extends Activity {

	private int minutes;

	@Override
	public void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_main);
	}

	@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		getMenuInflater().inflate(R.menu.activity_main, menu);
		return true;
	}

	Handler handler = new Handler() {
		
		public void handleMessage(Message msg) {
			// TODO: need to handle:
			// 1) start 25 minute timer
			// 2) start 5 minute timer
			// 3) cancel timer
			soundAlarm();			
		}

		private void soundAlarm() {
			Uri alert = RingtoneManager.getDefaultUri(RingtoneManager.TYPE_ALARM);
			if(alert == null){
				// alert is null, using backup
				alert = RingtoneManager.getDefaultUri(RingtoneManager.TYPE_NOTIFICATION);
				if(alert == null){  // I can't see this ever being null (as always have a default notification) but just incase
					// alert backup is null, using 2nd backup
					alert = RingtoneManager.getDefaultUri(RingtoneManager.TYPE_RINGTONE);               
				}
			}
			Ringtone r = RingtoneManager.getRingtone(getApplicationContext(), alert);
			r.play();
			
		};
		
	};
	
	public void startTimer(View v) {
		
		displayExpireTime();
		startExpireTimer();
		
        changeLabelToPointToTime();
	}

	private void startExpireTimer() {
		
		handler.sendMessageDelayed(Message.obtain(), 1000 * 60 * minutes);

	}

	private void displayExpireTime() {
		String expireTimeText = calculateExpireTime();
        TextView expireTime = (TextView) findViewById(R.id.expire_time);
        expireTime.setText(expireTimeText);
        
	}

	private String calculateExpireTime() {
		SimpleDateFormat sdf = new SimpleDateFormat("HH:mm");
        minutes = 2;
        Calendar cal = Calendar.getInstance();
        cal.setTime(new Date());
        cal.add(Calendar.MINUTE, minutes);
        String expireTimeText = sdf.format(cal.getTime());
		return expireTimeText;
	}

	private void changeLabelToPointToTime() {
		TextView labelText = (TextView) findViewById(R.id.view_info);
        labelText.setText(R.string.timer_label);
	}	

	
	
}
